{"version":3,"sources":["webpack:///./src/components/ProjectList.js","webpack:///./src/components/Projects.js","webpack:///./src/pages/projects.js","webpack:///./src/components/MusicItem.js"],"names":["ProjectItem","props","react_default","a","createElement","react_responsive_default","maxWidth","href","item","className","minWidth","ProjectList","id","list","map","index","ProjectList_ProjectItem","key","Projects","_Component","call","this","componentWillMount","_this","GetSheetDone","raw","spreadsheet","then","sheet","data","slice","setProjectLinksData","render","WelcomeMat","components_ProjectList","main","projectLinks","Component","connect","state","dispatch","bindActionCreators","Object","assign","actions","MusicItem","videoWidth","videoHeight","window","document","documentElement","clientWidth","srcEmbedString","concat","react__WEBPACK_IMPORTED_MODULE_1___default","react_responsive__WEBPACK_IMPORTED_MODULE_2___default","width","height","src","frameBorder","allowFullScreen"],"mappings":"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","file":"component---src-pages-projects-js-ae7edaca718aaa513a79.js","sourcesContent":["import React from 'react'\nimport MusicItem from './MusicItem'\nimport MediaQuery from 'react-responsive'\n\nconst ProjectItem = (props) => {\n        return (\n                <div>\n                        <MediaQuery maxWidth={991}>\n                                <li><a href={props.item[1]} className=\"project_button_mobile\"><p>{props.item[0]}</p></a></li>\n                        </MediaQuery>\n\n                        <MediaQuery minWidth={992}>\n                                <li><a href={props.item[1]} className=\"project_button\"><p>{props.item[0]}</p></a></li>\n                        </MediaQuery>\n                </div>\n        )\n}\n\nconst ProjectList = (props) => {\n        return (\n                <div id=\"projects\">\n                        <ul id=\"project_list\">\n                                {props.list.map((item, index) => {\n                                        return (\n                                                <ProjectItem item={item} key={index} />\n                                        )\n                                })}\n                        </ul>\n                        <span className=\"blinking-cursor\">...</span>\n                </div>\n        )\n}\n\nexport default ProjectList\n","import React, { Component } from 'react';\nimport MediaQuery from 'react-responsive'\nimport WelcomeMat from './WelcomeMat'\nimport ProjectList from './ProjectList'\nimport GetSheetDone from 'get-sheet-done'\nimport { spreadsheet } from '../../config'\n\nexport default class Projects extends Component {\n\n        constructor(props) {\n                super(props)\n        }\n\n        componentWillMount() {\n                GetSheetDone.raw(spreadsheet, 3)\n                .then(sheet => {\n                        const data = sheet.data.slice(1)\n                        this.props.setProjectLinksData(data)\n                })\n        }\n\n        render() {\n                return (\n                        <div>\n                                <WelcomeMat />\n                                <div>\n                                        <MediaQuery maxWidth={991}>\n                                                <div className=\"mobile_vertical\">\n                                                        <h4 className=\"topic_mobile\">ongoing projects:</h4>\n                                                        <ProjectList list={this.props.main.projectLinks} />\n                                                </div>\n                                        </MediaQuery>\n\n                                        <MediaQuery minWidth={992}>\n                                                <div className=\"mobile_vertical\">\n                                                        <div id=\"projects\">\n                                                                <h2>ongoing projects</h2>\n                                                        </div>\n                                                        <ProjectList list={this.props.main.projectLinks} />\n                                                </div>\n                                        </MediaQuery>\n                                </div>\n                        </div>\n                )\n        }\n}\n","import { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../actions'\nimport Projects from '../components/Projects'\nimport '../style/main.css'\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tmain: state.main\n\t}\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators(Object.assign({}, actions), dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects)\n","import React, { Component } from 'react'\nimport MediaQuery from 'react-responsive'\n\nexport default class MusicItem extends Component {\n\n        constructor(props) {\n                super(props)\n        }\n\n        render() {\n                var videoWidth = 0\n                var videoHeight = 0\n\n                if(typeof window !== 'undefined') {\n                        videoWidth = document.documentElement.clientWidth\n                        videoHeight = videoWidth * 9 / 16\n                }\n\n                const srcEmbedString = \"https://www.youtube.com/embed/\".concat(this.props.item[0])\n\n                return (\n                        <div>\n                                <MediaQuery maxWidth={991}>\n                                        <li>\n                                                <iframe className=\"center_item\" id=\"video\" width={videoWidth} height={videoHeight} src={srcEmbedString} frameBorder={0} allowFullScreen />\n                                        </li>\n                                </MediaQuery>\n\n                                <MediaQuery minWidth={992}>\n                                        <li>\n                                                <iframe className=\"center_item\" id=\"video\" width={560} height={315} src={srcEmbedString} frameBorder={0} allowFullScreen />\n                                        </li>\n                                </MediaQuery>\n                        </div>\n                )\n        }\n}\n"],"sourceRoot":""}